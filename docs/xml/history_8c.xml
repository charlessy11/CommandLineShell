<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="history_8c" kind="file" language="C++">
    <compoundname>history.c</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="history_8h" local="yes">history.h</includes>
    <includes refid="ui_8h" local="yes">ui.h</includes>
    <incdepgraph>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>ui.h</label>
        <link refid="ui_8h"/>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="1">
        <label>history.c</label>
        <link refid="history_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>history.h</label>
        <link refid="history_8h"/>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structhist__entry" prot="public">hist_entry</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="history_8c_1a7b2ed31b74cd7d9fa6dc10fe9b5cf336" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structhist__entry" kindref="compound">hist_entry</ref> *</type>
        <definition>struct hist_entry* hist_list</definition>
        <argsstring></argsstring>
        <name>hist_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>list of history entries </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="history.c" line="27" column="17" bodyfile="history.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="history_8c_1a40e06fde95b19cdb2d3de253ef08a8dc" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int cmd_count</definition>
        <argsstring></argsstring>
        <name>cmd_count</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="history.c" line="29" column="12" bodyfile="history.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="history_8c_1ac42e089d1a6702e3c2b070a517d9e34c" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int max_sz</definition>
        <argsstring></argsstring>
        <name>max_sz</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="history.c" line="30" column="12" bodyfile="history.c" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="history_8c_1a617a47c70795bcff659815ad0efd2266" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int counter</definition>
        <argsstring></argsstring>
        <name>counter</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="history.c" line="31" column="12" bodyfile="history.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="history_8c_1a53bf242cdbc6e517f7539436cbdf0f16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hist_init</definition>
        <argsstring>(unsigned int limit)</argsstring>
        <name>hist_init</name>
        <param>
          <type>unsigned int</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize history data struct</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>the max number of entries maintained </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="history.c" line="33" column="6" bodyfile="history.c" bodystart="33" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="history_8c_1a347cbc48b8e346aed7163ddf719b91fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hist_destroy</definition>
        <argsstring>(void)</argsstring>
        <name>hist_destroy</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free history list </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="history.c" line="39" column="6" bodyfile="history.c" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="history_8c_1af52f1f17c156adbb0a08db4b915aec1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hist_add</definition>
        <argsstring>(const char *cmd)</argsstring>
        <name>hist_add</name>
        <param>
          <type>const char *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add to history list</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>the command to add to the history list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="history.c" line="44" column="6" bodyfile="history.c" bodystart="44" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="history_8c_1af999c218a0ef1e9c89c61038644b6788" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hist_print</definition>
        <argsstring>(void)</argsstring>
        <name>hist_print</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Prints the histroy list </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="history.c" line="55" column="6" bodyfile="history.c" bodystart="55" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="history_8c_1a72ca35050def9b6e8866701e55ba7ec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* hist_search_prefix</definition>
        <argsstring>(char *prefix)</argsstring>
        <name>hist_search_prefix</name>
        <param>
          <type>char *</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the most recent command starting with &apos;prefix&apos;, or NULL if no match found</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>the prefix to match with history entry </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the most recent entry with matching prefix </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="history.c" line="72" column="6" bodyfile="history.c" bodystart="72" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="history_8c_1aa63f78ce7f55a04194c11491edb598bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* hist_search_cnum</definition>
        <argsstring>(int command_number)</argsstring>
        <name>hist_search_cnum</name>
        <param>
          <type>int</type>
          <declname>command_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a particular command number. Return NULL if no match found</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command_number</parametername>
</parameternamelist>
<parameterdescription>
<para>the command number to search </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the command associated with command number </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="history.c" line="95" column="6" bodyfile="history.c" bodystart="95" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="history_8c_1a458fece236a6a4579adbe2952e395294" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hist_last_cnum</definition>
        <argsstring>(void)</argsstring>
        <name>hist_last_cnum</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the most recent command number</para>
<para><simplesect kind="return"><para>the most recent command number </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="history.c" line="116" column="5" bodyfile="history.c" bodystart="116" bodyend="119"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Handles history. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="history_8h" kindref="compound">history.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ui_8h" kindref="compound">ui.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="structhist__entry" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhist__entry" kindref="compound">hist_entry</ref></highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmd_num;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>command[100];</highlight></codeline>
<codeline lineno="22"><highlight class="normal">};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhist__entry" kindref="compound">hist_entry</ref><sp/>*<ref refid="history_8c_1a7b2ed31b74cd7d9fa6dc10fe9b5cf336" kindref="member">hist_list</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmd_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_sz<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="history_8c_1a53bf242cdbc6e517f7539436cbdf0f16" kindref="member">hist_init</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="history_8c_1a7b2ed31b74cd7d9fa6dc10fe9b5cf336" kindref="member">hist_list</ref><sp/>=<sp/>malloc(limit<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structhist__entry" kindref="compound">hist_entry</ref>));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>max_sz<sp/>=<sp/>limit;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="history_8c_1a347cbc48b8e346aed7163ddf719b91fc" kindref="member">hist_destroy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>free(<ref refid="history_8c_1a7b2ed31b74cd7d9fa6dc10fe9b5cf336" kindref="member">hist_list</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="history_8c_1af52f1f17c156adbb0a08db4b915aec1c" kindref="member">hist_add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cmd)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd_count<sp/>&gt;=<sp/>max_sz)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter++;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(<ref refid="history_8c_1a7b2ed31b74cd7d9fa6dc10fe9b5cf336" kindref="member">hist_list</ref>[cmd_count].command,<sp/>cmd);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="history_8c_1a7b2ed31b74cd7d9fa6dc10fe9b5cf336" kindref="member">hist_list</ref>[cmd_count].cmd_num<sp/>=<sp/><ref refid="ui_8c_1a9270d80520077680951d5d67f8cd380f" kindref="member">get_count</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>cmd_count++;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="history_8c_1af999c218a0ef1e9c89c61038644b6788" kindref="member">hist_print</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>cmd_count;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>max_sz)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((max_sz<sp/>*<sp/>counter)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%d<sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="history_8c_1a7b2ed31b74cd7d9fa6dc10fe9b5cf336" kindref="member">hist_list</ref>[i].cmd_num<sp/>+<sp/>1,<sp/><ref refid="history_8c_1a7b2ed31b74cd7d9fa6dc10fe9b5cf336" kindref="member">hist_list</ref>[i].command);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(j<sp/>!=<sp/>cmd_count)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%d<sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="history_8c_1a7b2ed31b74cd7d9fa6dc10fe9b5cf336" kindref="member">hist_list</ref>[j].cmd_num<sp/>+<sp/>1,<sp/><ref refid="history_8c_1a7b2ed31b74cd7d9fa6dc10fe9b5cf336" kindref="member">hist_list</ref>[j].command);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++j;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>fflush(stdout);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="history_8c_1a72ca35050def9b6e8866701e55ba7ec0" kindref="member">hist_search_prefix</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*prefix)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>strlen(prefix);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>cmd_count<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(prefix,<sp/><ref refid="history_8c_1a7b2ed31b74cd7d9fa6dc10fe9b5cf336" kindref="member">hist_list</ref>[i].command,<sp/>len)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="history_8c_1a7b2ed31b74cd7d9fa6dc10fe9b5cf336" kindref="member">hist_list</ref>[i].command;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--i;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>max_sz<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(j<sp/>!=<sp/>cmd_count)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(counter<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(prefix,<sp/><ref refid="history_8c_1a7b2ed31b74cd7d9fa6dc10fe9b5cf336" kindref="member">hist_list</ref>[j].command,<sp/>len)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="history_8c_1a7b2ed31b74cd7d9fa6dc10fe9b5cf336" kindref="member">hist_list</ref>[j].command;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--j;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="history_8c_1aa63f78ce7f55a04194c11491edb598bb" kindref="member">hist_search_cnum</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>command_number)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>max_sz)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command_number<sp/>-<sp/>1<sp/>==<sp/><ref refid="history_8c_1a7b2ed31b74cd7d9fa6dc10fe9b5cf336" kindref="member">hist_list</ref>[i].cmd_num)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="history_8c_1a7b2ed31b74cd7d9fa6dc10fe9b5cf336" kindref="member">hist_list</ref>[i].command;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command_number<sp/>-<sp/>((counter<sp/>*<sp/>max_sz)<sp/>-<sp/>1)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command_number<sp/>&gt;<sp/>max_sz)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="history_8c_1a7b2ed31b74cd7d9fa6dc10fe9b5cf336" kindref="member">hist_list</ref>[command_number<sp/>-<sp/>((counter<sp/>*<sp/>max_sz)<sp/>-<sp/>1)<sp/>-<sp/>1].command);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="history_8c_1a7b2ed31b74cd7d9fa6dc10fe9b5cf336" kindref="member">hist_list</ref>[command_number<sp/>-<sp/>1].command);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="history_8c_1a458fece236a6a4579adbe2952e395294" kindref="member">hist_last_cnum</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cmd_count;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="history.c"/>
  </compounddef>
</doxygen>
